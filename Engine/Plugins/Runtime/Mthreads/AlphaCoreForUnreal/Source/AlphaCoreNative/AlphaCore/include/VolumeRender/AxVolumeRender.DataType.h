#ifndef __AX_VOLUME_RENDER_DATATYPE_H__
#define __AX_VOLUME_RENDER_DATATYPE_H__

#include "AxDataType.h"
#include "Math/AxMatrixBase.h"
#include "GridDense/AxFieldBase2D.h"
#include "GridDense/AxFieldBase3D.h"

typedef AxField2DBase<AxColorRGBA8> AxTextureRGBA8;
typedef AxField2DBase<AxColorRGBA> AxTextureRGBA;
typedef AxField2DBase<AxFp32> AxTextureR32;
typedef AxField2DBase<AxFp64> AxTextureR64;

struct AxGasVolumeMaterial
{
    bool needUpdate = true;
    bool usePhase = true;
    float densityScale = 1.0f;
    float shadowScale = 1.0f;
    float stepSize = 0.5f;
    float phase = 0.5f;

    AxVector2 minMaxInputDensity;
    AxVector2 minMaxInputTemperature; // 0~2
    // AxVector2 minMaxOuputTemperature;// 0~1
    AxVector2 minMaxInputHeat;

    AxUChar lookUpTableDensity[128] = { 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
                                       62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112,
                                       114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156,
                                       158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200,
                                       202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244,
                                       246, 248, 250, 252, 255 };
    AxUChar LookUpTableTemperature[128];
    AxColorRGBA8 lookUpTableDensityColor[128] = { {0, 0, 0, 255}, {2, 2, 2, 255}, {4, 4, 4, 255}, {6, 6, 6, 255}, {8, 8, 8, 255}, {10, 10, 10, 255}, {12, 12, 12, 255}, {14, 14, 14, 255}, {16, 16, 16, 255}, {18, 18, 18, 255}, {20, 20, 20, 255}, {22, 22, 22, 255}, {24, 24, 24, 255}, {26, 26, 26, 255}, {28, 28, 28, 255}, {30, 30, 30, 255}, {32, 32, 32, 255}, {34, 34, 34, 255}, {36, 36, 36, 255}, {38, 38, 38, 255}, {40, 40, 40, 255}, {42, 42, 42, 255}, {44, 44, 44, 255}, {46, 46, 46, 255}, {48, 48, 48, 255}, {50, 50, 50, 255}, {52, 52, 52, 255}, {54, 54, 54, 255}, {56, 56, 56, 255}, {58, 58, 58, 255}, {60, 60, 60, 255}, {62, 62, 62, 255}, {64, 64, 64, 255}, {66, 66, 66, 255}, {68, 68, 68, 255}, {70, 70, 70, 255}, {72, 72, 72, 255}, {74, 74, 74, 255}, {76, 76, 76, 255}, {78, 78, 78, 255}, {80, 80, 80, 255}, {82, 82, 82, 255}, {84, 84, 84, 255}, {86, 86, 86, 255}, {88, 88, 88, 255}, {90, 90, 90, 255}, {92, 92, 92, 255}, {94, 94, 94, 255}, {96, 96, 96, 255}, {98, 98, 98, 255}, {100, 100, 100, 255}, {102, 102, 102, 255}, {104, 104, 104, 255}, {106, 106, 106, 255}, {108, 108, 108, 255}, {110, 110, 110, 255}, {112, 112, 112, 255}, {114, 114, 114, 255}, {116, 116, 116, 255}, {118, 118, 118, 255}, {120, 120, 120, 255}, {122, 122, 122, 255}, {124, 124, 124, 255}, {126, 126, 126, 255}, {128, 128, 128, 255}, {130, 130, 130, 255}, {132, 132, 132, 255}, {134, 134, 134, 255}, {136, 136, 136, 255}, {138, 138, 138, 255}, {140, 140, 140, 255}, {142, 142, 142, 255}, {144, 144, 144, 255}, {146, 146, 146, 255}, {148, 148, 148, 255}, {150, 150, 150, 255}, {152, 152, 152, 255}, {154, 154, 154, 255}, {156, 156, 156, 255}, {158, 158, 158, 255}, {160, 160, 160, 255}, {162, 162, 162, 255}, {164, 164, 164, 255}, {166, 166, 166, 255}, {168, 168, 168, 255}, {170, 170, 170, 255}, {172, 172, 172, 255}, {174, 174, 174, 255}, {176, 176, 176, 255}, {178, 178, 178, 255}, {180, 180, 180, 255}, {182, 182, 182, 255}, {184, 184, 184, 255}, {186, 186, 186, 255}, {188, 188, 188, 255}, {190, 190, 190, 255}, {192, 192, 192, 255}, {194, 194, 194, 255}, {196, 196, 196, 255}, {198, 198, 198, 255}, {200, 200, 200, 255}, {202, 202, 202, 255}, {204, 204, 204, 255}, {206, 206, 206, 255}, {208, 208, 208, 255}, {210, 210, 210, 255}, {212, 212, 212, 255}, {214, 214, 214, 255}, {216, 216, 216, 255}, {218, 218, 218, 255}, {220, 220, 220, 255}, {222, 222, 222, 255}, {224, 224, 224, 255}, {226, 226, 226, 255}, {228, 228, 228, 255}, {230, 230, 230, 255}, {232, 232, 232, 255}, {234, 234, 234, 255}, {236, 236, 236, 255}, {238, 238, 238, 255}, {240, 240, 240, 255}, {242, 242, 242, 255}, {244, 244, 244, 255}, {246, 246, 246, 255}, {248, 248, 248, 255}, {250, 250, 250, 255}, {252, 252, 252, 255}, {255, 255, 255, 255} };
    AxColorRGBA8 LookUpTableHeat[128];
};

struct AxVolumeRenderObject
{
    AxScalarFieldF32::RAWDesc density;
    AxScalarFieldF32::RAWDesc heat;
    AxScalarFieldF32::RAWDesc temperature;
    AxGasVolumeMaterial material;
};

static AxVolumeRenderObject MakeDefaultVolumeRenderObject()
{
    AxVolumeRenderObject t;
    return t;
}

struct AxSceneRenderDesc
{
    AxUChar lightNum;
    AlphaCore::Desc::AxCameraInfo camInfo;
    AlphaCore::Desc::AxPointLightInfo lightInfo[3];
};

#endif